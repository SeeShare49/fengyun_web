<?php

namespace app\pay\controller;

use think\Controller;
use think\facade\Log;
use think\Request;

class QiYou
{
    const Callback_Key = '08682213938316890715589277849869';// '40085276461742690885326028373098';//Callback_Key
    const Md5_Key = 'b0hmfqph5ytuo5oqweqjv5lmykvnqrg1';//Md5_Key

    /**
     *  琦游支付异步回调通知（惊天动地游戏包回调）
     **/
    public function notify_url()
    {
        /**
         *  'nt_data' => '@117@118@171@162@161@89@169@152@164@163@161@168@163@117@89@100@97@98@83@87@158@159@149@160@149@155@159@152@112@89@134@134@127@100@107@87@85@172@167@148@160@148@153@165@164@166@156@112@85@160@160@89@120@111@110@162@166@155@148@156@166@155@156@145@166@156@166@168@150@160@152@113@110@157@157@172@168@153@158@152@113@110@154@170@152@165@151@164@165@112@98@109@98@160@164@145@173@156@166@169@115@117@150@155@147@158@166@158@161@118@103@111@98@149@153@152@167@159@151@157@111@110@148@153@148@165@159@151@165@150@161@150@162@158@113@111@97@147@160@154@163@166@156@159@146@160@146@164@158@111@110@148@153@147@159@159@152@163@144@167@162@155@113@155@150@113@101@99@149@147@105@154@153@107@112@148@103@151@106@112@107@105@101@150@106@152@146@102@104@108@97@101@110@156@150@117@148@97@92@111@97@147@160@154@163@166@156@159@146@167@154@155@119@109@149@153@146@160@159@150@159@150@160@164@157@156@165@115@113@104@150@155@147@158@166@158@161@151@166@165@151@151@163@117@117@152@147@158@150@145@160@163@151@156@163@112@106@150@103@103@110@109@108@106@105@98@113@114@103@104@105@100@99@105@97@108@106@100@98@102@97@105@109@96@154@152@158@151@152@166@165@153@154@171@113@111@161@162@156@158@167@151@165@162@113@98@97@103@107@97@100@98@97@105@97@102@100@106@97@103@105@110@102@102@105@112@108@100@107@99@107@117@100@167@169@151@152@164@144@165@168@111@110@161@146@171@144@165@156@164@150@112@107@103@101@102@98@105@106@96@98@101@88@106@104@114@103@104@109@98@104@115@104@161@147@170@144@166@154@158@152@117@109@147@166@166@168@163@169@119@100@99@96@96@104@117@100@153@164@162@168@160@165@117@117@164@166@146@165@167@164@111@99@115@96@165@173@152@167@170@168@119@111@152@170@164@170@154@168@151@167@148@165@147@158@170@119@109@97@150@169@166@163@146@166@150@161@147@171@152@160@168@115@117@98@160@151@163@171@154@156@157@117@111@98@163@166@160@156@156@165@149@156@145@158@150@166@170@146@153@158@117',
         * 'sign' => '@113@155@108@110@106@107@100@103@147@148@110@158@107@156@152@148@149@99@106@152@157@106@149@147@97@105@146@147@101@155@103@105',
         * 'md5Sign' => '7aade5db541aafd9145192d6aeb17290',
         **/


        Log::write("琦游惊天动地支付异步回调通知函数!!!");
//        $result = \think\facade\Request::param();
//        echo $result;
        $result = [
            'nt_data' => '@117@118@171@162@161@89@169@152@164@163@161@168@163@117@89@100@97@98@83@87@158@159@149@160@149@155@159@152@112@89@134@134@127@100@107@87@85@172@167@148@160@148@153@165@164@166@156@112@85@160@160@89@120@111@110@162@166@155@148@156@166@155@156@145@166@156@166@168@150@160@152@113@110@157@157@172@168@153@158@152@113@110@154@170@152@165@151@164@165@112@98@109@98@160@164@145@173@156@166@169@115@117@150@155@147@158@166@158@161@118@103@111@98@149@153@152@167@159@151@157@111@110@148@153@148@165@159@151@165@150@161@150@162@158@113@111@97@147@160@154@163@166@156@159@146@160@146@164@158@111@110@148@153@147@159@159@152@163@144@167@162@155@113@155@150@113@101@99@149@147@105@154@153@107@112@148@103@151@106@112@107@105@101@150@106@152@146@102@104@108@97@101@110@156@150@117@148@97@92@111@97@147@160@154@163@166@156@159@146@167@154@155@119@109@149@153@146@160@159@150@159@150@160@164@157@156@165@115@113@104@150@155@147@158@166@158@161@151@166@165@151@151@163@117@117@152@147@158@150@145@160@163@151@156@163@112@106@150@103@103@110@109@108@106@105@98@113@114@103@104@105@100@99@105@97@108@106@100@98@102@97@105@109@96@154@152@158@151@152@166@165@153@154@171@113@111@161@162@156@158@167@151@165@162@113@98@97@103@107@97@100@98@97@105@97@102@100@106@97@103@105@110@102@102@105@112@108@100@107@99@107@117@100@167@169@151@152@164@144@165@168@111@110@161@146@171@144@165@156@164@150@112@107@103@101@102@98@105@106@96@98@101@88@106@104@114@103@104@109@98@104@115@104@161@147@170@144@166@154@158@152@117@109@147@166@166@168@163@169@119@100@99@96@96@104@117@100@153@164@162@168@160@165@117@117@164@166@146@165@167@164@111@99@115@96@165@173@152@167@170@168@119@111@152@170@164@170@154@168@151@167@148@165@147@158@170@119@109@97@150@169@166@163@146@166@150@161@147@171@152@160@168@115@117@98@160@151@163@171@154@156@157@117@111@98@163@166@160@156@156@165@149@156@145@158@150@166@170@146@153@158@117',
            'sign' => '@113@155@108@110@106@107@100@103@147@148@110@158@107@156@152@148@149@99@106@152@157@106@149@147@97@105@146@147@101@155@103@105',
            'md5Sign' => '7aade5db541aafd9145192d6aeb17290',
        ];

        if (isset($result)) {
            $nt_data = $result['nt_data'];
            $sign = $result['sign'];
            $md5sign = $result['md5Sign'];


            $checksign = md5($nt_data . $sign . self::Md5_Key);
            if ($md5sign == $checksign) {
                Log::write("琦游惊天动地支付回调签名一致！！！");


                $ret_nt_data = $this->decode($nt_data, self::Callback_Key);
                Log::write("ret_nt_data:" . $ret_nt_data);
            } else {
                Log::write("md5(nt_data+sign+md5key)与md5sign不一致！！！");
                Log::write("校验签名:" . $checksign);
                Log::write("md5sign:" . $md5sign);
            }
        }

        echo 'success';
        echo '琦游惊天动地支付异步回调通知';
    }

    public function test()
    {
        $call_back_key  ='17846082291592961846584735117268';
//        $result = [
//            'nt_data
//            'sign' => '@104@155@109@158@105@104@104@106@111@103@112@103@148@152@104@158@149@111@101@151@102@111@156@149@155@112@113@105@154@110@108@106',
//            'md5Sign' => '07dae8d71374651c1f0ee4cc16a37f6e',
//            'callback_key' => '08682213938316890715589277849869'
//        ];
//

        $result = [
            'nt_data' => '@109@118@176@161@162@80@174@151@164@172@154@164@167@111@91@103@95@104@86@86@154@166@151@166@151@158@159@152@116@84@139@140@119@100@112@86@86@163@172@147@160@157@146@161@168@160@158@115@83@166@163@88@116@118@112@168@168@158@148@156@170@150@161@151@158@156@171@167@151@151@157@112@110@166@150@168@172@147@160@155@111@116@157@169@148@172@153@170@167@115@98@109@102@155@169@151@165@156@171@168@116@108@155@154@147@167@159@154@165@112@105@114@96@155@156@151@163@166@153@163@113@113@148@153@152@160@164@157@157@150@166@149@163@149@118@110@97@156@153@150@167@160@158@162@144@166@149@163@154@118@112@154@155@150@159@159@156@158@149@173@154@155@118@154@151@104@106@98@149@156@98@150@157@101@114@151@101@157@109@111@103@112@103@156@108@155@146@102@108@103@102@107@102@156@155@116@149@88@97@110@97@156@153@150@167@160@158@162@144@173@157@154@115@116@151@159@148@163@159@150@163@145@165@170@149@156@170@114@114@95@155@154@147@167@159@154@165@145@168@168@149@157@166@116@113@159@149@164@152@148@160@163@155@151@168@118@98@150@108@102@111@100@113@105@105@107@106@110@107@98@107@103@97@111@100@107@102@111@104@109@102@108@109@96@158@147@163@157@144@166@170@152@155@162@118@110@161@171@149@154@171@145@167@165@111@104@100@102@103@104@102@104@99@108@97@102@104@105@106@110@100@111@111@105@109@97@110@98@102@110@100@113@104@161@171@154@150@170@147@164@164@118@112@167@148@174@144@165@160@159@155@118@99@103@106@101@99@96@111@95@98@110@81@102@112@108@109@108@107@107@108@114@100@168@149@176@146@169@154@158@156@112@114@153@158@166@173@162@170@110@105@98@96@105@97@113@104@147@166@165@166@166@168@116@113@171@168@152@167@170@164@111@103@110@101@171@165@152@172@169@169@110@116@151@170@173@163@150@172@145@169@151@163@153@161@169@115@116@99@156@171@169@163@146@170@145@166@153@163@152@165@167@116@108@103@159@151@172@164@150@160@151@119@114@96@169@169@159@152@163@167@155@158@148@158@150@170@165@151@159@150@117',
            'sign' => '@101@153@156@103@111@146@155@151@103@157@106@102@156@151@110@151@106@106@149@111@109@110@109@157@99@103@101@99@112@102@104@111',
            'md5Sign' => 'eb848022cea95e5ccba1facb4b57e998',
        ];
        $ret_str = $this->decode($result['nt_data'],$call_back_key);
        var_dump($ret_str);
    }

    /**
     *  琦游支付异步回调通知（上古战歌游戏包回调）
     **/
    public function notify_url_2()
    {
        Log::write("琦游支付异步回调通知函数!!!");
        $result = \think\facade\Request::param();
        echo $result;
        var_dump($result);
        echo 'success';
        echo '琦游上古战歌支付异步回调通知';
    }


    /**
     * 解密方法
     * $strEncode 密文
     * $keys 解密密钥 为游戏接入时分配的 callback_key
     */
    public function decode($strEncode, $keys)
    {
        if (empty($strEncode)) {
            return $strEncode;
        }
        preg_match_all('(\d+)', $strEncode, $list);
        $list = $list[0];
        if (count($list) > 0) {
            $keys = self::getBytes($keys);
            for ($i = 0; $i < count($list); $i++) {
                $keyVar = $keys[$i % count($keys)];
                $data[$i] = $list[$i] - (0xff & $keyVar);
            }
            return self::toStr($data);
        } else {
            return $strEncode;
        }
    }


    /**
     * 计算游戏同步签名
     */
    public static function getSign($params, $callbackkey)
    {

        return md5($params['nt_data'] . $params['sign'] . $callbackkey);
    }

    /**
     * MD5签名替换
     */
    static private function replaceMD5($md5)
    {

        strtolower($md5);
        $bytes = self::getBytes($md5);

        $len = count($bytes);

        if ($len >= 23) {
            $change = $bytes[1];
            $bytes[1] = $bytes[13];
            $bytes[13] = $change;

            $change2 = $bytes[5];
            $bytes[5] = $bytes[17];
            $bytes[17] = $change2;

            $change3 = $bytes[7];
            $bytes[7] = $bytes[23];
            $bytes[23] = $change3;
        } else {
            return $md5;
        }

        return self::toStr($bytes);
    }

    /**
     * 转成字符数据
     */
    private static function getBytes($string)
    {
        $bytes = array();
        for ($i = 0; $i < strlen($string); $i++) {
            $bytes[] = ord($string[$i]);
        }
        return $bytes;
    }

    /**
     * 转化字符串
     */
    private static function toStr($bytes)
    {
        $str = '';
        foreach ($bytes as $ch) {
            $str .= chr($ch);
        }
        return $str;
    }

}
